# Generated by Django 2.2.5 on 2019-10-14 10:29

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('location', models.CharField(choices=[('012010', '旭川'), ('013010', '網走'), ('015020', '浦賀'), ('016010', '札幌'), ('020010', '青森'), ('030010', '盛岡'), ('040010', '仙台'), ('050010', '秋田'), ('060010', '山形'), ('070010', '福島'), ('080010', '水戸'), ('090010', '宇都宮'), ('100010', '前橋'), ('110010', 'さいたま'), ('120010', '千葉'), ('130010', '東京'), ('140010', '横浜'), ('150010', '新潟'), ('160010', '富山'), ('170010', '金沢'), ('180010', '福井'), ('190010', '甲府'), ('200010', '長野'), ('210010', '岐阜'), ('220010', '静岡'), ('230010', '名古屋'), ('240010', '津'), ('250010', '大津'), ('260010', '京都'), ('270000', '大阪'), ('280010', '神戸'), ('290010', '奈良'), ('300010', '和歌山'), ('310010', '鳥取'), ('320010', '松江'), ('330010', '岡山'), ('340010', '広島'), ('350020', '山口'), ('360010', '徳島'), ('370000', '高松'), ('380010', '松山'), ('390010', '高知'), ('400010', '福岡'), ('410010', '佐賀'), ('420010', '長崎'), ('430010', '熊本'), ('440010', '大分'), ('450010', '宮崎'), ('460010', '鹿児島'), ('471010', '那覇')], max_length=20, verbose_name='住所')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
